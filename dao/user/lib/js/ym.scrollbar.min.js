/*! chatrooms 2016-03-21 */
!function (a, b) {
    function c(a, b) {
        this.options = $.extend({}, c.defaultOptions, b || {}), this.$element = $(a), this.$arrowUp = $(this.options.arrowUp, this.$element), this.$arrowDown = $(this.options.arrowDown, this.$element), this.$track = $(this.options.track, this.$element), this.$thumb = $(this.options.thumb, this.$element), this.options.scontainer && (this.$scontainer = $(this.options.scontainer), this.$starget = this.$scontainer.children()), this.__initialize(), this.__initEvents(), this.__updateStates()
    }

    c.prototype.__initialize = function () {
        this.scrollPosition = this.maxScrollPosition = this.minScrollPosition = 0, this.enabled = !1
    }, c.prototype.__initEvents = function () {
        var a = this;
        a.__trackDownDelegate = function (b) {
            a.__trackDown(b)
        }, a.__dragStartDelegate = function (b) {
            a.__dragStart(b)
        }, a.__dragMovingDelegate = function (b) {
            a.__dragMoving(b)
        }, a.__dragEndDelegate = function (b) {
            a.__dragEnd(b)
        }, a.$arrowUp.size() && a.$arrowDown.size() ? (a.__upDelegate = function () {
            return a.up(), !1
        }, a.__downDelegate = function () {
            return a.down(), !1
        }, a.$arrowUp.click(a.__upDelegate), a.$arrowDown.click(a.__downDelegate)) : (a.$arrowUp = null, a.$arrowDown = null), a.$track.bind("mousedown", a.__trackDownDelegate), a.$thumb.bind("mousedown", a.__dragStartDelegate), a.options.mousewheel && (a.__mousewheelDelegate = function (b) {
            return a.__mousewheel(b), !1
        }, a.$element.bind("mousewheel DOMMouseScroll", a.__mousewheelDelegate), a.$scontainer && a.$scontainer.bind("mousewheel DOMMouseScroll", a.__mousewheelDelegate))
    }, c.prototype.__mousewheel = function (a) {
        a.preventDefault(), this.__updateScrollPosition(0 < (0 < (-a.originalEvent.detail || a.originalEvent.wheelDelta) ? -120 : 120) ? this.scrollPosition + this.options.scrollStep : this.scrollPosition - this.options.scrollStep, this.options.scrollSpeed)
    }, c.prototype.__trackDown = function (a) {
        if (a.preventDefault(), a.target == this.$thumb[0])return !1;
        var b = "vertical" === this.options.direction ? "pageY" : "pageX", c = "vertical" === this.options.direction ? "top" : "left", d = .5 * this.$thumb["vertical" === this.options.direction ? "outerHeight" : "outerWidth"]();
        a = a[b] - (this.$track.offset()[c] + d), this.__updateScrollPosition(a, this.options.scrollSpeed)
    }, c.prototype.__dragStart = function (a) {
        a.preventDefault(), this.___data = {
            coordval: "vertical" === this.options.direction ? parseInt(this.$thumb.css("top")) : parseInt(this.$thumb.css("left")),
            pageval: "vertical" === this.options.direction ? a.pageY : a.pageX
        }, $(document).bind("mousemove", this.__dragMovingDelegate).bind("mouseup", this.__dragEndDelegate)
    }, c.prototype.__dragMoving = function (a) {
        a.preventDefault(), this.__updateScrollPosition(a["vertical" === this.options.direction ? "pageY" : "pageX"] - this.___data.pageval + this.___data.coordval, 0)
    }, c.prototype.__dragEnd = function (a) {
        a.preventDefault(), $(document).unbind("mousemove", this.__dragMovingDelegate).unbind("mouseup", this.__dragEndDelegate), this.___data = null
    }, c.prototype.__updateScrollPosition = function (a, b) {
        b = b || 0;
        var c = "vertical" === this.options.direction ? "outerHeight" : "outerWidth", d = Math.max(this.minScrollPosition, Math.min(a, this.maxScrollPosition)), e = this.$scontainer[c](), e = -(this.$starget[c](!0) - e) * ((d - this.minScrollPosition) / this.maxScrollPosition - this.minScrollPosition);
        e > 0 && (e = 0), c = "vertical" === this.options.direction ? {top: d} : {left: d}, e = "vertical" === this.options.direction ? {top: e} : {left: e}, this.scrollPosition = d, 0 == b ? (this.$thumb.css(c), this.$starget.css(e)) : (this.$thumb.stop(!0).animate(c, b), this.$starget.stop(!0).animate(e, b))
    }, c.prototype.__updateStates = function () {
        if (this.$scontainer) {
            var a = "vertical" === this.options.direction ? "outerHeight" : "outerWidth", b = "vertical" === this.options.direction ? "height" : "width", c = this.$scontainer[a](), d = this.$starget[a](!0), e = this.$thumb[a](), a = this.$track[a]();
            0 >= d - c ? (this.enabled = !1, this.$thumb.css("display", "none")) : (e = this.options.autoCaculation ? c / d * a : e, 20 > e && (e = 20), this.enabled = !0, this.$thumb.css("display", "block").css(b, e + "px"), this.minScrollPosition = 0, this.maxScrollPosition = a - e)
        } else this.enabled = !1, this.$thumb.css("display", "none")
    }, c.prototype.up = function () {
        return this.__updateScrollPosition(this.scrollPosition - this.options.scrollStep, this.options.scrollSpeed), this
    }, c.prototype.down = function () {
        return this.__updateScrollPosition(this.scrollPosition + this.options.scrollStep, this.options.scrollSpeed), this
    }, c.prototype.setScrollPosition = function (a, b) {
        return a && this.__updateScrollPosition(a, "undefined" == typeof b ? 0 : b), this
    }, c.prototype.update = function () {
        return this.__updateStates(), this
    }, c.prototype.reset = function () {
        return this.__updateStates(), this.__updateScrollPosition(0, 0), this
    }, c.prototype.setScrollContainer = function (a) {
        return null == a && this.$scontainer && (this.$scontainer.unbind("mousewheel DOMMouseScroll", this.__mousewheelDelegate), this.$starget = this.$scontainer = null), a && (this.$scontainer = $(a), this.$starget = this.$scontainer.children(), this.$scontainer.bind("mousewheel DOMMouseScroll", this.__mousewheelDelegate), this.$starget.css("vertical" === this.options.direction ? "top" : "left", 0), this.$thumb.css("vertical" === this.options.direction ? "top" : "left", 0), this.__updateStates()), this
    }, c.defaultOptions = {
        scontainer: null,
        arrowUp: ".arrow-up",
        arrowDown: ".arrow-down",
        track: ".track",
        thumb: ".thumb",
        direction: "vertical",
        autoCaculation: !0,
        autoVisible: !1,
        mousewheel: !0,
        scrollStep: 30,
        scrollSpeed: 200,
        onDragStart: null,
        onDraging: null,
        onDragEnd: null
    }, $.ym = $.ym || {}, $.ym.Scrollbar = c, $.fn.ymScrollbar = function (a) {
        return this.each(function () {
            new c(this, a)
        })
    }
}(window, jQuery);